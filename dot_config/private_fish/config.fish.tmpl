# Seeded from https://github.com/jonhoo/configs/blob/master/shell/.config/fish/config.fish

abbr -a yr 'cal -y'
abbr -a c cargo
abbr -a cc cargo clippy -- -D clippy::all -W clippy::pedantic -W clippy::nursery
abbr -a cfg sudo CARGO_PROFILE_RELEASE_DEBUG=true cargo flamegraph --dev
abbr -a d nvim -d
abbr -a du dust -d 1
abbr -a e nvim
abbr -a g git
{{ if eq .chezmoi.os "darwin" -}}
abbr -a o open
{{- else -}}
abbr -a o xdg-open
{{- end }}

# Thse may not be needed long term, but finding myself type them often right now!
abbr -a cha chezmoi apply
abbr -a chc chezmoi cd
abbr -a chd chezmoi diff
abbr -a che chezmoi edit --apply
abbr -a chu chezmoi update

if command -v sudo-rs > /dev/null
    abbr -a sudo sudo-rs
    abbr -a su su-rs
end

{{ if eq .chezmoi.os "darwin" -}}
# [macOS] Homebrew environment variables
# NOTE: Do not move this further down, otherwise `tmux` will not be found!
{{- end -}}
{{- if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "amd64") }}
eval $(/usr/local/bin/brew shellenv)
{{- else if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "arm64") }}
eval $(/opt/homebrew/bin/brew shellenv)
{{- end }}

if status is-interactive
    {{ if eq .chezmoi.os "darwin" -}}
	# Only apply base16 theme for fish if tmux is not running, due to escape sequences not working in later versions
    # Appears to only be affecting macOS, Linux is fine!
	# See https://github.com/tomyun/base16-fish/issues/7#issuecomment-963376055
    if test -d ~/dev/others/base16/templates/fish-shell && test -z "$TMUX"
    {{- else -}}
    if test -d ~/dev/others/base16/templates/fish-shell
    {{- end }}
        set fish_function_path $fish_function_path ~/dev/others/base16/templates/fish-shell/functions
        builtin source ~/dev/others/base16/templates/fish-shell/conf.d/base16.fish
    end

	if ! set -q TMUX
		exec tmux
	end
end

if command -v eza > /dev/null
	abbr -a l 'eza'
	abbr -a ls 'eza'
	abbr -a ll 'eza -l'
	abbr -a lll 'eza -la'
else
	abbr -a l 'ls'
	abbr -a ll 'ls -l'
	abbr -a lll 'ls -la'
end

{{ if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "amd64") -}}
if test -f /usr/local/share/autojump/autojump.fish
	source /usr/local/share/autojump/autojump.fish
end
{{- else if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "arm64") -}}
if test -f /opt/homebrew/share/autojump/autojump.fish
	source /opt/homebrew/share/autojump/autojump.fish
end
{{- else if (eq .chezmoi.os "linux") -}}
if test -f /usr/share/autojump/autojump.fish;
	source /usr/share/autojump/autojump.fish;
end
{{- end }}

# Fish git prompt
set __fish_git_prompt_showuntrackedfiles 'yes'
set __fish_git_prompt_showdirtystate 'yes'
set __fish_git_prompt_showstashstate ''
set __fish_git_prompt_showupstream 'none'
set -g fish_prompt_pwd_dir_length 3

# Coloured man output
# From http://linuxtidbits.wordpress.com/2009/03/23/less-colors-for-man-pages/
setenv LESS_TERMCAP_mb \e'[01;31m'       # begin blinking
setenv LESS_TERMCAP_md \e'[01;38;5;74m'  # begin bold
setenv LESS_TERMCAP_me \e'[0m'           # end mode
setenv LESS_TERMCAP_se \e'[0m'           # end standout-mode
setenv LESS_TERMCAP_so \e'[38;5;246m'    # begin standout-mode - info box
setenv LESS_TERMCAP_ue \e'[0m'           # end underline
setenv LESS_TERMCAP_us \e'[04;38;5;146m' # begin underline
setenv GROFF_NO_SGR 1 # https://unix.stackexchange.com/q/119

# make less better
# X = leave content on-screen
# F = quit automatically if less than one screenfull
# R = raw terminal characters (fixes git diff)
#     see http://jugglingbits.wordpress.com/2010/03/24/a-better-less-playing-nice-with-git/
setenv LESS '-F -X -R'

# command-line fuzzy finder
# see https://github.com/junegunn/fzf
setenv FZF_DEFAULT_COMMAND 'fd --type file --follow -H'
setenv FZF_CTRL_T_COMMAND 'fd --type file --follow -H'
setenv FZF_DEFAULT_OPTS '--height 20%'

# ripgrep, aka rg
# see https://github.com/BurntSushi/ripgrep
setenv RIPGREP_CONFIG_PATH ~/.config/rg/rg.conf

# Rust stuff
setenv RUST_BACKTRACE 1

# Environment variables
setenv EDITOR nvim

# Remove the default fish greeting
set fish_greeting

# Cargo
fish_add_path $HOME/.cargo/bin

{{ if eq .chezmoi.os "darwin" -}}
# [macOS] rbenv for Ruby
eval "$(rbenv init -)"

# [macOS] 1Password SSH Agent
setenv SSH_AUTH_SOCK ~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
{{- end }}

function fish_prompt
	set_color brblack
	echo -n "["(date "+%H:%M")"] "
	set_color blue
    {{- if eq .chezmoi.os "darwin" }}
    echo -n (hostname -s)
    {{- else if eq .chezmoi.os "linux" }}
    echo -n (hostnamectl hostname)
    {{- end }}
	if [ $PWD != $HOME ]
		set_color brblack
		echo -n ':'
		set_color yellow
		echo -n (basename $PWD)
	end
	set_color green
	printf '%s ' (__fish_git_prompt)
	set_color red
	echo -n '| '
	set_color normal
end
